#!/usr/bin/env bash

set -e -u
set -o pipefail

# write some cool doc here

function main ()
{
    display=true
    while getopts "sh" opt; do
        case ${opt} in
            s)
                display=false
                ;;
            h)    # help message
                cat << EOF
Usage: $(basename $0) [OPTION]...
Options: -h: show this help dialog
    -s: silent mode
EOF
                exit 0
                ;;
            ?)
                echo "Unknown option, exiting now" >&2
                exit 1
                ;;
        esac
    done
    shift $((OPTIND - 1))
    [[ "${1:-}" == '--' ]] && shift

    paused=$(grep -E -m1 "^#127.0.0.1\s*spclient.wg.spotify.com$" /etc/hosts || echo "")
    unpaused=$(grep -E -m1 "^127.0.0.1\s*spclient.wg.spotify.com$" /etc/hosts || echo "")
    if [[ ! -z "${paused}" ]]; then
        sed -i 's/^#127.0.0.1\s*spclient.wg.spotify.com$/127.0.0.1 spclient.wg.spotify.com/' /etc/hosts
        if "${display}"; then
            printf "enabled ad-blocking\n"
        fi
    elif [[ ! -z "${unpaused}" ]]; then
        sed -i 's/^127.0.0.1\s*spclient.wg.spotify.com$/#127.0.0.1 spclient.wg.spotify.com/' /etc/hosts
        if "${display}"; then
            printf "disabled ad-blocking\n"
        fi
    else
        printf "wtf just happened?\n"
    fi
}

if [ "${BASH_SOURCE[0]}" == "$0" ]; then
    main "$@"
fi
