#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Write_description_and_usage_example_here
"""

import argparse
import logging
import sys

LOG = logging.getLogger()
LOG.setLevel('INFO')
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
ch = logging.StreamHandler()
ch.setFormatter(formatter)
LOG.addHandler(ch)


FEE = 0.001

def profit(buy, sell, failsale=0):
    end = sell - FEE * (buy + sell) - failsale * FEE
    perc = (end - buy) / buy * 100
    return (end - buy, perc)

def minprofit(buy):
    sell = buy * (1 + FEE) / (1 - FEE)
    perc = (sell - buy) / buy * 100
    return (sell, perc)

def downtrend(sell):
    buy = sell * (1 - FEE) / (1 + FEE)
    perc = (sell - buy) / sell * 100
    return (buy, perc)

def parse_args():
    parser = argparse.ArgumentParser(
            formatter_class=argparse.RawDescriptionHelpFormatter,
    )
    parser.add_argument(
        '-d', '--debug',
        action='store_true',
        help='enable debug logging information',
    )
    sp = parser.add_subparsers(dest='method')
    p = sp.add_parser('profit')
    p.add_argument(
        'buy',
        type=float,
        help='buy price'
    )
    p.add_argument(
        'sell',
        type=float,
        help='sell price'
    )
    p.add_argument(
        '--fail',
        type=int,
        default=0,
        help='number of cancelled transactions'
    )
    p = sp.add_parser('minprofit')
    p.add_argument(
        'buy',
        type=float,
        help='buy price'
    )
    p = sp.add_parser('downtrend')
    p.add_argument(
        'sell',
        type=float,
        help='buy price'
    )
    return parser.parse_args()


def main():
    args = parse_args()
    if args.method == 'profit':
        prof, perc = profit(args.buy, args.sell, args.fail)
        print("TRADE PROFIT: {0:.5f} ({1:.5f}%)".format(prof, perc))
    elif args.method == 'minprofit':
        sellprice, perc = minprofit(args.buy)
        print("MIN PROFIT AT: {:.5f}\t\tCOIN MUST INCREASE BY {:.5f}%".format(
            sellprice, perc
        ))
    elif args.method == 'downtrend':
        buyprice, perc = downtrend(args.sell)
        print("MIN SAVE AT {:.5f}\t\tCOIN MUST DECREASE BY {:.5f}%".format(
            buyprice, perc
        ))

if __name__ == '__main__':
    main()
