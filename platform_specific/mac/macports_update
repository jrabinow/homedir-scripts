#!/usr/bin/env bash

set -e -u -o pipefail

# upgrade all macports while doing some house cleaning
# https://stackoverflow.com/a/7491014

# freezeports_hashes file format:
# $ cat ~/.local/share/macports/freezeports_hashes
# dd94e2d3e7eed7f7bfcc1b3f0afb3835    google-cloud-sdk
# 43bf28556dfc9b534d5cc4fd08662a30    qt5-qttools
FREEZEPORTS_HASHES="${XDG_DATA_DIR:-${HOME}/.local/share/macports/freezeports_hashes}"
readonly FREEZEPORTS_HASHES

function usage ()
{
    cat << EOF
Usage: ${0##*/} [OPTION]...
Options: -h, --help: show this help dialog
         --no-selfupdate: don't run \`port selfupdate\`
EOF
}

function set_param ()
{
    portfile="${1}"; shift
    param="${1}"; shift
    value="${1}"; shift
    sed -i -E "s/^${param}(\s+).*$/${param}\1${value}/g" "${portfile}"
}

function handle_shellcheck ()
{
    portfile="${1}"; shift
    set_param "${portfile}" revision 1
}

# Looks like some historical cruft here, let's make sure and then change the dependencies
# https://github.com/macports/macports-ports/pull/3386#issuecomment-453184996
# https://trac.macports.org/ticket/57871
#function handle_bashdb ()
#{
#    portfile="${1}"; shift
#    sed -i -E 's/port:bash50$/port:bash/' "${portfile}"
#}

# use python3.10. gcloud command ignores the dependency version anyways and
# tries to intelligently select the python version on its own. Spoiler alert:
# this approach is dumb
# https://github.com/macports/macports-ports/pull/13936
function handle_google-cloud-sdk ()
{
    portfile="${1}"; shift
    py_version=3.10
    set_param "${portfile}" python.default_version "$(tr -d '.' <<< "${py_version}")"
    # disable patches
    sed -i -E '/# Default to the MacPorts Python binary/,/^$/ d' "${portfile}"
    sed -i -E '/reinplace "s\|\^#!\/usr\/bin\/env python/,/^$/ d' "${portfile}"
}

# exa build currently broken
function handle_exa ()
{
    portfile="${1}"; shift
    set_param "${portfile}" revision 2
}

function handle_mariadb-10.8()
{
    portfile="${1}"; shift
    sed -i -E 's/^(version\s+)10.8.4$/\110.8.3/' "${portfile}"
}

function readhash ()
{
    local portname="${1}"; shift

    # https://unix.stackexchange.com/a/462089
    declare -n hashes="freezeports_md5"
    # shellcheck disable=SC2034
    hashes["${portname}"]="$(awk "/${portname}/ {print \$1}" "${FREEZEPORTS_HASHES}")"
}

function macports_localchanges ()
{
    declare -A freezeports_md5=()
    # these ports change often and won't be fixed soon
    declare -A skip_port_md5="google-cloud-sdk"

    readhash google-cloud-sdk
    #readhash bashdb
    readhash exa
    readhash shellcheck
    readhash mariadb-10.8

    for portname in "${!freezeports_md5[@]}"; do
        portfile="$(port file "${portname}")"
        portfile_md5_actual="$(md5sum "${portfile}"|awk '{print $1}')"
        portfile_md5_expected="${freezeports_md5[${portname}]}"
        if [ "${portfile_md5_actual}" != "${portfile_md5_expected}" ] && \
            [[ ! ".*${portname}.*" =~ "${skip_port_md5}" ]]; then
            tmpfile=$(mktemp)
            echo "${portname} updated!"
            echo -e "\"m\tLINE\t0\n\t$(md5sum "${portfile}"|awk "{print \$1  \"\t${portname}\"}")" > "${tmpfile}"
            vim -i "${tmpfile}" -O "${FREEZEPORTS_HASHES}" "${portfile}"
            rm "${tmpfile}"
        else
            # https://stackoverflow.com/a/33387433
            handle_"${portname}" "${portfile}"
        fi
    done
}

function postinstall_tasks ()
{
    # google-cloud-sdk is built remotely, updating the portfile changes nothing T_T
    port contents google-cloud-sdk | \
        grep /opt/local/bin | \
        xargs readlink | \
        xargs -I% file /opt/local/bin/% | \
        grep 'POSIX shell script' | \
        cut -d: -f1 | \
        xargs sed -i -E 's|CLOUDSDK_PYTHON=(.*)/3\.7/(.*)python3\.7|CLOUDSDK_PYTHON=\1/3.10/\2python3.10|'
}

function main()
{
    run_port_selfupdate=true

    while getopts "h-:" opt; do
        case "${opt}" in
            h) # help message
                usage
                exit 0
                ;;
            -)
                case "${OPTARG}" in
                    help)
                        usage
                        exit 0
                        ;;
                    no-selfupdate)
                        run_port_selfupdate=false
                        ;;
                    *)
                        printf "Unknown option, exiting now\n" >&2
                        exit 1
                        ;;
                esac
                ;;
            ?)
                echo "Unknown option, exiting now" >&2
                exit 1
                ;;
        esac
    done
    if "${run_port_selfupdate}"; then
        port selfupdate
    fi
    macports_localchanges
    port upgrade outdated
    port uninstall leaves || true
    port uninstall inactive || true
    port uninstall rleaves || true
    port reclaim || true
    postinstall_tasks
}

if [ "${BASH_SOURCE[0]}" == "$0" ]; then
    main "$@"
fi
