#!/usr/bin/env bash

set -eu
set -o pipefail

function print_ip_addr ()
{
    iface="$(route get 192.168.1.1|awk '/interface: / {print $2; }')"
    case $(uname) in
        Darwin)
            ipconfig getifaddr "${iface}"
            ;;
        *)
            ip addr show "${iface}"
            ;;
    esac
}


function resolve_target ()
{
    local target="${1}"; shift
    source "${NETWORK_TARGETS}"
    if [ -v "${target}" ]; then
        echo "${!target}"
    else
        echo "${target}"
    fi
}

function ensure_targets_file ()
{
    test -d "${TARGET_ALIAS_DIR}" || mkdir -p "${TARGET_ALIAS_DIR}" && \
        test -f "${NETWORK_TARGETS}" || \
        touch "${NETWORK_TARGETS}" || \
        (printf "ERROR SETTING UP NETWORK TARGETS MODULE\n" >&2 && return)
}

function add_network_target ()
{
    readonly local alias="${1}"; shift
    readonly local target="${1}"; shift

    ensure_targets_file
    printf "%s=\"%s\"\n" "${alias}" "${target}" >> "${NETWORK_TARGETS}"
}

function binary ()
{
    if command -v ncat >/dev/null 2>&1; then
        printf 'ncat --%s-only ' "${progname}"
    else
        printf 'nc -w1'
    fi
}

function main ()
{
    local portnum=9600
    local file
    local ip_addr
    local progname
    readonly local TARGET_ALIAS_DIR="${XDG_DATA_HOME:-${HOME}/.local/share}/bash"
    readonly local NETWORK_TARGETS="${TARGET_ALIAS_DIR}/network_targets"

    progname=$(basename "$0")
    case $progname in
        "send" )
            if [ $# == 0 ]; then
                printf 'Usage: %s filename1 [filename2 ...]\n' "${progname}" >&2
                exit 0
            fi
            print_ip_addr
            while [ $# != 0 ]; do
                file="${1}"; shift
                printf 'Sending file %s...\n' "${file}"
                $(binary) -vlp"${portnum}" < "${file}"
            done
            ;;
        "recv" )
            if [ $# == 0 ]; then
                printf 'Usage: %s IP_Address filename1 [filename2 ...]\n' "${progname}"  >&2
                exit 0
            fi
            ip_addr="$(resolve_target "$1")"; shift
            while [ $# != 0 ]; do
                file="$(resolve_target "${1}")"; shift
                printf 'Receiving file %s...\n' "${file}"
                if [ -e "${file}" ]; then
                    printf 'ERROR: file %s already exists\n' "${file}" >&2
                    read -rn1 -p '[A]bort, (O)verwrite, (R)ename, (E)xit: '
                    printf '\n'
                    case "${REPLY}" in
                        [rR])
                            while [ -e "${file}" ]; do
                                read -rp 'Enter new name for file: '
                                file="${REPLY}"
                            done
                            ;;
                        [eE])
                            exit 0
                            ;;
                        [oO])
                            printf 'Overwriting file %s with new version.\n' "${file}" >&2
                            ;;
                        *)
                            continue
                            ;;
                    esac
                fi
                $(binary) -v "${ip_addr}" "${portnum}" > "${file}"
            done
            ;;
        "send_add_target")
            add_network_target "${@}"
            ;;
        *)
            printf 'Script called with incorrect name\n'
    esac
}


if [ "${BASH_SOURCE[0]}" == "$0" ]; then
    main "$@"
fi
