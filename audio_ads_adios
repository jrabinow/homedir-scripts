#!/usr/bin/env bash

# Auto-kill+restart spotify when it tries to play an ad. This script will keep
# running in the background and will automatically stop running when spotify
# stops running
#
# https://github.com/Jugran/spotify-ad-killer/blob/master/spotify-ad-killer.sh

if [ -n "${DEBUG}" ]; then
    exec 5>/tmp/bash_debug_output.txt
    BASH_XTRACEFD="5"
    PS4='$LINENO: '
    set -x -T
fi
set -e -u
set -o pipefail

# Know which signal is caught
# man 7 signal
for i in {1..31}; do
    # shellcheck disable=SC2064
    if [[ "${i}" -ne 20 ]]; then
        trap "bell -m 'signal ${i} caught!'" "${i}"
    fi
done

function usage()
{
    cat <<EOF
Usage: ${0##*/}" [OPTION]...
Options: --help, -h: show this help dialog
EOF
}

function monitor_and_skip_ads()
{
    old_track_id=""

    while is_spotify_running; do
        track_id="$(timeout 1 osascript -e 'tell application "spotify" to id of current track' || echo "")"
        if [[ ${track_id} =~ "spotify:ad:" || ("${track_id}" == "" && $(is_spotify_running)) ]]; then
            pkill -9 -i spotify
            sleep 1
            spotify_launchnplay
            track_id="$(timeout 1 osascript -e 'tell application "spotify" to id of current track' || echo "")"
            if [[ ${track_id} =~ "spotify:ad:" || "${track_id}" == "" || "${track_id}" == "${old_track_id}" ]]; then
                osascript -e 'tell application "spotify" to next track'
            fi
            osascript -e 'tell application "spotify" to play'
        fi
        old_track_id="${track_id}"
        sleep 1
    done
    bell -m "no spotify running; audio_ads_adios exiting now"
}

function is_spotify_running()
{
    test "$(pgrep -i spotify)" != ""
}

function is_audio_adblocker_running()
{
    # greater than 2: one for the self, and one for the fork
    test "$(pgrep -alf 'bash' | grep -c audio_ads_adios)" -gt 2
}

function spotify_launchnplay()
{
    osascript -e 'tell application "System Events" to set foregroundApp to name of first application process whose frontmost is true' \
        -e 'tell application "Spotify" to launch' \
        -e 'delay 0.5' \
        -e 'tell application foregroundApp to activate' \
        -e 'delay 2' \
        -e 'tell application "spotify" to play'
}

function main()
{
    while getopts "h-:" opt; do
        case ${opt} in
        h) # help message
            usage
            exit 0
            ;;
        -)
            case "${OPTARG}" in
            help)
                usage
                exit 0
                ;;
            *)
                printf 'Unknown option, exiting now\n' >&2
                exit 1
                ;;
            esac
            ;;
        ?)
            printf 'Unknown option, exiting now\n' >&2
            exit 1
            ;;
        esac
    done
    shift $((OPTIND - 1))
    [[ ${1-} == '--' ]] && shift

    if ! is_spotify_running; then
        spotify_launchnplay
    fi

    if is_audio_adblocker_running; then
        printf "already running\n"
    else
        monitor_and_skip_ads &
    fi
    exit 0
}

if [ "${BASH_SOURCE[0]}" == "$0" ]; then
    main "$@"
fi
