#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Write_description_and_usage_example_here
"""

import argparse
import logging
from typing import Set, Dict, List
from urllib.parse import unquote, parse_qs, urlsplit, SplitResult

LOG = logging.getLogger()
LOG.setLevel("INFO")
formatter: logging.Formatter = logging.Formatter(
    "%(asctime)s - %(levelname)s - %(message)s"
)
ch: logging.StreamHandler = logging.StreamHandler()
ch.setFormatter(formatter)
LOG.addHandler(ch)


def parse_args() -> argparse.Namespace:
    parser: argparse.ArgumentParser = argparse.ArgumentParser(
        formatter_class=argparse.RawDescriptionHelpFormatter,
    )
    parser.add_argument(
        "-d",
        "--debug",
        action="store_true",
        help="enable debug logging information",
    )
    parser.add_argument(
        "--no-decode",
        action="store_true",
        help="decode query params when urlencoded",
    )
    parser.add_argument(
        "--params",
        type=str,
        nargs="*",
        default={},
        help="which query parameters to display (default: all)",
    )
    parser.add_argument(
        "url",
        nargs="+",
        help="url",
    )
    parser.add_argument(
        "--with-name",
        action="store_true",
        help="display queryparam name (is default if not specifying specific params",
    )
    args: argparse.Namespace = parser.parse_args()
    if args.debug:
        LOG.setLevel(logging.DEBUG)
    return args


# urldefense.proofpoint.com uses its own encoding scheme, because screw
# standards I guess ðŸ™„
# https://help.proofpoint.com/Threat_Insight_Dashboard/Concepts/How_do_I_decode_a_rewritten_URL%3F
def decode(url, is_proofpoint=False) -> str:
    if url.startswith("http"):
        if is_proofpoint:
            url = url.replace("-", "%").replace("_", "/")
        return unquote(url)
    return url


def main() -> int:
    args: argparse.Namespace = parse_args()
    params_to_display: Set[str] = set(args.params)

    for url in args.url:
        is_proofpoint: bool = url.startswith("https://urldefense.proofpoint.com/v2/")
        parsed_url: SplitResult = urlsplit(url)
        queryparams: Dict[str, List[str]] = parse_qs(parsed_url.query)

        if len(queryparams) == 0:
            print(unquote(parsed_url.path))
        else:
            for k, v in queryparams.items():
                if len(params_to_display) == 0 or k in params_to_display:
                    if args.no_decode:
                        queryvals: List[str] = v
                    else:
                        queryvals: List[str] = [decode(e, is_proofpoint) for e in v]
                    fmt_queryvals: str = ", ".join(queryvals)
                    if len(params_to_display) == 0 or args.with_name:
                        print("{} -> {}".format(k, fmt_queryvals))
                    else:
                        print(fmt_queryvals)
    return 0


if __name__ == "__main__":
    main()
